{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { CountdownCircleTimer } from 'react-native-countdown-circle-timer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Data = [{\n  id: 1,\n  question: 'The term ‘Computer’ is derived from__________?',\n  options: [{\n    id: 'A',\n    text: 'Latin',\n    correct: true\n  }, {\n    id: 'B',\n    text: 'Greek',\n    correct: false\n  }, {\n    id: 'C',\n    text: 'Pak',\n    correct: false\n  }, {\n    id: 'D',\n    text: 'Turkey',\n    correct: false\n  }]\n}, {\n  id: 2,\n  question: 'Who is the father of Computer?',\n  options: [{\n    id: 'A',\n    text: 'Allen Turing',\n    correct: false\n  }, {\n    id: 'B',\n    text: 'Charles Babbage',\n    correct: true\n  }, {\n    id: 'C',\n    text: 'Simur Cray',\n    correct: false\n  }, {\n    id: 'D',\n    text: 'Augusta Adaming',\n    correct: false\n  }]\n}];\nexport default function Level1() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedAnswers = _useState2[0],\n    setSelectedAnswers = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedAnswer = _useState4[0],\n    setSelectedAnswer = _useState4[1];\n  var correctCount = selectedAnswers.filter(function (q) {\n    return q.correct;\n  }).length;\n  var wrongCount = selectedAnswers.filter(function (q) {\n    return !q.correct;\n  }).length;\n  var handleAnswerPress = function handleAnswerPress(questionId, answerId, isCorrect) {\n    var questionIndex = selectedAnswers.findIndex(function (q) {\n      return q.id === questionId;\n    });\n    if (questionIndex === -1 || !selectedAnswers[questionIndex].selected) {\n      if (questionIndex === -1) {\n        setSelectedAnswers([].concat(_toConsumableArray(selectedAnswers), [{\n          id: questionId,\n          selected: answerId,\n          correct: isCorrect\n        }]));\n      } else {\n        var updatedAnswers = _toConsumableArray(selectedAnswers);\n        updatedAnswers[questionIndex] = {\n          id: questionId,\n          selected: answerId,\n          correct: isCorrect\n        };\n        setSelectedAnswers(updatedAnswers);\n      }\n      setSelectedAnswer(null);\n    }\n  };\n  var renderOption = function renderOption(questionId, option) {\n    var _selectedAnswers$find, _selectedAnswers$find2, _selectedAnswers$find3;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleAnswerPress(questionId, option.id, option.correct);\n      },\n      style: {\n        marginVertical: 1,\n        width: '90%',\n        backgroundColor: ((_selectedAnswers$find = selectedAnswers.find(function (q) {\n          return q.id === questionId;\n        })) == null ? void 0 : _selectedAnswers$find.selected) === option.id ? (_selectedAnswers$find2 = selectedAnswers.find(function (q) {\n          return q.id === questionId;\n        })) != null && _selectedAnswers$find2.correct ? 'green' : 'red' : 'white',\n        borderRadius: 20\n      },\n      children: _jsx(Text, {\n        style: {\n          margin: 5,\n          fontSize: 18,\n          color: ((_selectedAnswers$find3 = selectedAnswers.find(function (q) {\n            return q.id === questionId;\n          })) == null ? void 0 : _selectedAnswers$find3.selected) === option.id ? 'white' : 'black'\n        },\n        children: option.text\n      })\n    }, `${questionId}-${option.id}`);\n  };\n  var renderQuestion = function renderQuestion(_ref) {\n    var question = _ref.item;\n    return _jsxs(View, {\n      style: {\n        elevation: 4,\n        marginBottom: 30,\n        flex: 1,\n        borderRadius: 10,\n        width: '100%',\n        backgroundColor: 'white'\n      },\n      children: [_jsx(View, {\n        style: {\n          margin: 10\n        },\n        children: _jsxs(Text, {\n          children: [\"Question \", question.id]\n        })\n      }), _jsxs(View, {\n        style: {\n          marginVertical: 0,\n          margin: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 20\n          },\n          children: question.question\n        }), question.options.map(function (option) {\n          return renderOption(question.id, option);\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(View, {\n      style: {\n        width: '100%',\n        height: '15%',\n        backgroundColor: '#2f7a8f',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 32,\n          fontWeight: 'bold',\n          color: 'white'\n        },\n        children: \"Computer Quiz\"\n      })\n    }), _jsxs(View, {\n      style: {\n        margin: 20,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-evenly'\n      },\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 22,\n            fontWeight: 'bold'\n          },\n          children: \"Your Score\"\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-evenly'\n          },\n          children: [_jsxs(View, {\n            style: {\n              alignItems: 'center'\n            },\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 15,\n                fontWeight: 'bold',\n                color: 'green'\n              },\n              children: \"Correct\"\n            }), _jsx(Text, {\n              style: {\n                fontSize: 29,\n                fontWeight: 'bold',\n                color: 'green'\n              },\n              children: correctCount\n            })]\n          }), _jsxs(View, {\n            style: {\n              alignItems: 'center'\n            },\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 15,\n                fontWeight: 'bold',\n                color: 'red'\n              },\n              children: \" Wrong\"\n            }), _jsx(Text, {\n              style: {\n                fontSize: 29,\n                fontWeight: 'bold',\n                color: 'red'\n              },\n              children: wrongCount\n            })]\n          })]\n        })]\n      }), _jsx(CountdownCircleTimer, {\n        size: 100,\n        isPlaying: true,\n        duration: 30,\n        colors: ['#004777', '#F7B801', '#A30000', '#A30000'],\n        colorsTime: [7, 5, 2, 0],\n        children: function children(_ref2) {\n          var remainingTime = _ref2.remainingTime;\n          return _jsx(Text, {\n            style: {\n              fontSize: 30,\n              fontWeight: 'bold',\n              color: 'grey'\n            },\n            children: remainingTime\n          });\n        }\n      })]\n    }), _jsx(View, {\n      style: {\n        width: '100%',\n        alignItems: 'center',\n        marginVertical: 20,\n        justifyContent: 'center'\n      },\n      children: _jsx(FlatList, {\n        data: Data,\n        renderItem: renderQuestion,\n        showsVerticalScrollIndicator: false,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Text","View","TouchableOpacity","FlatList","CountdownCircleTimer","jsx","_jsx","jsxs","_jsxs","Data","id","question","options","text","correct","Level1","_useState","_useState2","_slicedToArray","selectedAnswers","setSelectedAnswers","_useState3","_useState4","selectedAnswer","setSelectedAnswer","correctCount","filter","q","length","wrongCount","handleAnswerPress","questionId","answerId","isCorrect","questionIndex","findIndex","selected","concat","_toConsumableArray","updatedAnswers","renderOption","option","_selectedAnswers$find","_selectedAnswers$find2","_selectedAnswers$find3","onPress","style","marginVertical","width","backgroundColor","find","borderRadius","children","margin","fontSize","color","renderQuestion","_ref","item","elevation","marginBottom","flex","map","height","alignItems","justifyContent","fontWeight","flexDirection","size","isPlaying","duration","colors","colorsTime","_ref2","remainingTime","data","renderItem","showsVerticalScrollIndicator","keyExtractor","toString"],"sources":["E:/React native course video/Test/QuizApp/QuizScreen/Level/Level1.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, View, TouchableOpacity, FlatList } from 'react-native';\r\nimport { CountdownCircleTimer } from 'react-native-countdown-circle-timer'\r\nconst Data = [\r\n  {\r\n    id: 1,\r\n    question: 'The term ‘Computer’ is derived from__________?',\r\n    options: [\r\n      { id: 'A', text: 'Latin', correct: true },\r\n      { id: 'B', text: 'Greek', correct: false },\r\n      { id: 'C', text: 'Pak', correct: false },\r\n      { id: 'D', text: 'Turkey', correct: false },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    question: 'Who is the father of Computer?',\r\n    options: [\r\n      { id: 'A', text: 'Allen Turing', correct: false },\r\n      { id: 'B', text: 'Charles Babbage', correct: true },\r\n      { id: 'C', text: 'Simur Cray', correct: false },\r\n      { id: 'D', text: 'Augusta Adaming', correct: false },\r\n    ],\r\n  },\r\n  // Add more questions as needed\r\n];\r\n\r\nexport default function Level1() {\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n\r\n  const correctCount = selectedAnswers.filter((q) => q.correct).length;\r\n    const wrongCount = selectedAnswers.filter((q) => !q.correct).length;\r\n\r\n\r\n  const handleAnswerPress = (questionId, answerId, isCorrect) => {\r\n    const questionIndex = selectedAnswers.findIndex((q) => q.id === questionId);\r\n\r\n    // Check if an answer is already selected for the current question\r\n    if (questionIndex === -1 || !selectedAnswers[questionIndex].selected) {\r\n      if (questionIndex === -1) {\r\n        setSelectedAnswers([...selectedAnswers, { id: questionId, selected: answerId, correct: isCorrect }]);\r\n      } else {\r\n        const updatedAnswers = [...selectedAnswers];\r\n        updatedAnswers[questionIndex] = { id: questionId, selected: answerId, correct: isCorrect };\r\n        setSelectedAnswers(updatedAnswers);\r\n      }\r\n\r\n      setSelectedAnswer(null);\r\n    }\r\n  };\r\n\r\n  const renderOption = (questionId, option) => (\r\n    <TouchableOpacity\r\n      key={`${questionId}-${option.id}`}\r\n      onPress={() => handleAnswerPress(questionId, option.id, option.correct)}\r\n      style={{\r\n        marginVertical: 1,\r\n        width: '90%',\r\n        backgroundColor:\r\n          selectedAnswers.find((q) => q.id === questionId)?.selected === option.id\r\n            ? selectedAnswers.find((q) => q.id === questionId)?.correct\r\n              ? 'green'\r\n              : 'red'\r\n            : 'white',\r\n        borderRadius: 20,\r\n      }}\r\n    >\r\n      <Text style={{ margin: 5, fontSize: 18, color: selectedAnswers.find((q) => q.id === questionId)?.selected === option.id ? 'white' : 'black' }}>\r\n        {option.text}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const renderQuestion = ({ item: question }) => (\r\n    <View style={{ elevation: 4, marginBottom: 30, flex: 1, borderRadius: 10, width: '100%', backgroundColor: 'white' }}>\r\n      <View style={{ margin: 10 }}>\r\n        <Text>Question {question.id}</Text>\r\n      </View>\r\n      <View style={{ marginVertical: 0, margin: 10 }}>\r\n        <Text style={{ fontSize: 20 }}>{question.question}</Text>\r\n        {question.options.map((option) => renderOption(question.id, option))}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      {/* Header */}\r\n\r\n      <View style={{ width: '100%', height: '15%', backgroundColor: '#2f7a8f', alignItems: 'center', justifyContent: 'center' }}>\r\n        <Text style={{ fontSize: 32, fontWeight: 'bold', color: 'white' }}>Computer Quiz</Text>\r\n      </View>\r\n      <View style={{margin:20,flexDirection:'row',alignItems:'center',justifyContent:'space-evenly'}}>\r\n        <View>\r\n        <Text style={{fontSize:22,fontWeight:'bold'}}>Your Score</Text>\r\n        <View style={{flexDirection:'row',justifyContent:'space-evenly'}}>\r\n      <View style={{alignItems:'center'}}>\r\n        <Text style={{fontSize:15,fontWeight:'bold',color:'green'}}>Correct</Text>\r\n        <Text style={{fontSize:29,fontWeight:'bold',color:'green'}}>{correctCount}</Text>\r\n        </View>\r\n        <View style={{alignItems:'center'}}>\r\n        <Text style={{fontSize:15,fontWeight:'bold',color:'red'}}> Wrong</Text>\r\n        <Text style={{fontSize:29,fontWeight:'bold',color:'red'}}>{wrongCount}</Text>\r\n        </View>\r\n        </View>\r\n        </View>\r\n        <CountdownCircleTimer\r\n  size={100}\r\n    isPlaying\r\n    duration={30}\r\n    colors={['#004777', '#F7B801', '#A30000', '#A30000']}\r\n    colorsTime={[7, 5, 2, 0]}\r\n  >\r\n    {({ remainingTime }) => <Text style={{fontSize:30,fontWeight:'bold',color:'grey'}}>{remainingTime}</Text>}\r\n  </CountdownCircleTimer>\r\n  </View>\r\n      {/* Quiz Content */}\r\n      <View style={{ width: '100%', alignItems: 'center', marginVertical: 20, justifyContent: 'center' }}>\r\n        <FlatList data={Data} renderItem={renderQuestion} showsVerticalScrollIndicator={false} keyExtractor={(item) => item.id.toString()} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}