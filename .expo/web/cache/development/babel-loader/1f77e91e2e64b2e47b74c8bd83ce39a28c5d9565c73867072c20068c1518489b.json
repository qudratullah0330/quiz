{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Level1 from \"./Level/Level1\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Data = [{\n  image: require(\"../img/img1.png\"),\n  step: 'Level 1',\n  Screen: 'Level1'\n}];\nexport default function QuizScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(View, {\n      style: {\n        width: '100%',\n        height: '15%',\n        backgroundColor: '#2f7a8f',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 32,\n          fontWeight: 'bold',\n          color: 'white'\n        },\n        children: \"Computer Quiz\"\n      })\n    }), _jsx(ScrollView, {\n      children: _jsx(View, {\n        style: {\n          flexDirection: 'row',\n          flex: 1,\n          flexWrap: 'wrap',\n          alignItems: 'center',\n          marginVertical: 20,\n          justifyContent: 'center'\n        },\n        children: Data.map(function (item, index) {\n          return _jsx(View, {\n            children: _jsx(View, {\n              style: {\n                margin: 10,\n                borderRadius: 10\n              },\n              children: _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navigation.navigate(item.Screen);\n                },\n                style: {\n                  width: 140,\n                  height: 190,\n                  borderRadius: 20,\n                  elevation: 3,\n                  backgroundColor: 'white',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                },\n                children: _jsx(Text, {\n                  style: {\n                    fontSize: 28,\n                    fontWeight: 'bold',\n                    color: 'green'\n                  },\n                  children: item.step\n                })\n              })\n            })\n          }, index);\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","View","Text","Image","ScrollView","TouchableOpacity","Level1","jsx","_jsx","jsxs","_jsxs","Data","image","require","step","Screen","QuizScreen","_ref","navigation","style","flex","children","width","height","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","color","flexDirection","flexWrap","marginVertical","map","item","index","margin","borderRadius","onPress","navigate","elevation"],"sources":["E:/React native course video/Test/QuizApp/QuizScreen/QuizScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, Image, ScrollView, TouchableOpacity } from 'react-native';\r\nimport Level1 from './Level/Level1';\r\nconst Data = [\r\n  { image: require('../img/img1.png'), step: 'Level 1',Screen:'Level1' },\r\n  \r\n  \r\n];\r\n\r\n\r\nexport default function QuizScreen({navigation}) {\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ width: '100%', height: '15%', backgroundColor: '#2f7a8f', alignItems: 'center', justifyContent: 'center' }}>\r\n        <Text style={{ fontSize: 32, fontWeight: 'bold', color: 'white' }}>Computer Quiz</Text>\r\n      </View>\r\n      <ScrollView>\r\n       <View style={{flexDirection:'row',flex:1,flexWrap:'wrap',alignItems:'center',\r\n       marginVertical:20,justifyContent:'center'}}>\r\n        \r\n      {Data.map((item, index) => (\r\n        <View key={index} >\r\n        <View style={{margin:10,borderRadius:10}}> \r\n         <TouchableOpacity onPress={()=>navigation.navigate(item.Screen)}\r\n           style={{width:140,height:190,borderRadius:20,elevation:3,backgroundColor:'white',\r\n        alignItems:'center',justifyContent:'center'}}>\r\n            <Text style={{fontSize:28,fontWeight:'bold',color:'green'}}>{item.step}</Text>\r\n            </TouchableOpacity>\r\n         </View>\r\n         \r\n        </View>\r\n      ))}\r\n \r\n      </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAE1B,OAAOC,MAAM;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACpC,IAAMC,IAAI,GAAG,CACX;EAAEC,KAAK,EAAEC,OAAO,kBAAkB,CAAC;EAAEC,IAAI,EAAE,SAAS;EAACC,MAAM,EAAC;AAAS,CAAC,CAGvE;AAGD,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAe;EAAA,IAAbC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC5C,OACER,KAAA,CAACT,IAAI;IAACkB,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,GACvBb,IAAA,CAACP,IAAI;MAACkB,KAAK,EAAE;QAAEG,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,KAAK;QAAEC,eAAe,EAAE,SAAS;QAAEC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAAL,QAAA,EACxHb,IAAA,CAACN,IAAI;QAACiB,KAAK,EAAE;UAAEQ,QAAQ,EAAE,EAAE;UAAEC,UAAU,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAR,QAAA,EAAC;MAAa,CAAM;IAAC,CACnF,CAAC,EACPb,IAAA,CAACJ,UAAU;MAAAiB,QAAA,EACVb,IAAA,CAACP,IAAI;QAACkB,KAAK,EAAE;UAACW,aAAa,EAAC,KAAK;UAACV,IAAI,EAAC,CAAC;UAACW,QAAQ,EAAC,MAAM;UAACN,UAAU,EAAC,QAAQ;UAC5EO,cAAc,EAAC,EAAE;UAACN,cAAc,EAAC;QAAQ,CAAE;QAAAL,QAAA,EAE3CV,IAAI,CAACsB,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;UAAA,OACpB3B,IAAA,CAACP,IAAI;YAAAoB,QAAA,EACLb,IAAA,CAACP,IAAI;cAACkB,KAAK,EAAE;gBAACiB,MAAM,EAAC,EAAE;gBAACC,YAAY,EAAC;cAAE,CAAE;cAAAhB,QAAA,EACxCb,IAAA,CAACH,gBAAgB;gBAACiC,OAAO,EAAE,SAAAA,QAAA;kBAAA,OAAIpB,UAAU,CAACqB,QAAQ,CAACL,IAAI,CAACnB,MAAM,CAAC;gBAAA,CAAC;gBAC9DI,KAAK,EAAE;kBAACG,KAAK,EAAC,GAAG;kBAACC,MAAM,EAAC,GAAG;kBAACc,YAAY,EAAC,EAAE;kBAACG,SAAS,EAAC,CAAC;kBAAChB,eAAe,EAAC,OAAO;kBACnFC,UAAU,EAAC,QAAQ;kBAACC,cAAc,EAAC;gBAAQ,CAAE;gBAAAL,QAAA,EACzCb,IAAA,CAACN,IAAI;kBAACiB,KAAK,EAAE;oBAACQ,QAAQ,EAAC,EAAE;oBAACC,UAAU,EAAC,MAAM;oBAACC,KAAK,EAAC;kBAAO,CAAE;kBAAAR,QAAA,EAAEa,IAAI,CAACpB;gBAAI,CAAO;cAAC,CAC5D;YAAC,CAChB;UAAC,GAPGqB,KASL,CAAC;QAAA,CACR;MAAC,CAEI;IAAC,CACK,CAAC;EAAA,CACT,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}